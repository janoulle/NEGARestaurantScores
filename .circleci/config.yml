# Java Gradle CircleCI 2.0 configuration file
# https://circleci.com/docs/2.0/sample-config/
# https://github.com/CircleCI-Public/circleci-demo-java-spring/blob/master/.circleci/config.yml
# https://springframework.guru/using-circleci-to-build-spring-boot-microservices/
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:

    working_directory: ~/RestaurantScores

    docker:
      - image: circleci/openjdk:8-jdk

    branches:
      ignore:
        - develop
        - /feature-.*/

    environment:
      # Customize the JVM maximum heap limit
      TEST_REPORTS: /tmp/test-reports
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - RestaurantScores-{{ checksum "build.gradle" }}
          - RestaurantScores-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: RestaurantScores-{{ checksum "build.gradle" }}

      - run: gradle --console=plain --stacktrace test

      # https://circleci.com/docs/2.0/configuration-reference/#store_test_results
      # https://circleci.com/docs/2.0/collect-test-data/#gradle-junit-results
      # Upload test results
      - run:
          name: Save test results
          command: |
              mkdir -p ~/tmp/test-reports/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tmp/test-reports/ \;
          when: always

      - store_test_results:
          path: ~/tmp/test-reports

      # https://circleci.com/docs/2.0/artifacts/#artifacts-overview
      - run:
          name: Creating Artifacts folder
          command: |
              mkdir -p ~/tmp/artifacts/

      - store_artifacts:
          path: ~/tmp/artifacts

