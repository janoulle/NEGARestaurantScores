spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
#create-drop or update
#http://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html
#https://stackoverflow.com/questions/49088847/after-spring-boot-2-0-migration-jdbcurl-is-required-with-driverclassname
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.database.driverClassName=org.postgresql.Driver
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource (not needed since hikari is now the default)

#https://stackoverflow.com/questions/26490967/how-do-i-configure-hikaricp-in-my-spring-boot-app-in-my-application-properties-f\
#Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=RestaurantScoresConnectionPool
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.profiles.active=postgresql
#Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
#Enable http encoding support.
spring.http.encoding.enabled=true
#Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true
log4j.rootLogger=WARN, A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c -  %m%n
# Turn on DEBUG logging in com.amazonaws.request to log
# a summary of requests/responses with AWS request IDs
log4j.logger.com.amazonaws.request=DEBUG
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/restaurantscores
spring.application.name=Restaurant Scores
spring.jmx.default-domain=${spring.application.name}

# Banner file encoding.
spring.banner.charset=UTF-8
# Banner text resource location.
spring.banner.location=classpath:banner.txt

#https://stackoverflow.com/questions/46493500/hibernate-with-c3p0-createclob-is-not-yet-implemented
#http://vkuzel.blogspot.com/2016/03/spring-boot-jpa-hibernate-atomikos.html
#https://github.com/spring-projects/spring-boot/issues/12007
#https://stackoverflow.com/questions/46493500/hibernate-with-c3p0-createclob-is-not-yet-implemented
#https://stackoverflow.com/questions/49110818/method-org-postgresql-jdbc-pgconnection-createclob-is-not-yet-implemented
# disable driver's feature detection
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# without detection you have to set the dialect by hand
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

hibernate.jdbc.lob.non_contextual_creation=true

# spring.cache.jcache.config=classpath:ehcache.xml

